Estimate[4] <- Qn(x, constant = 1)
return(Estimate)
}
results = matrix(rep(0,20000),ncol=4)
set.seed(1234)
nSample <- 2000
nTrial <- 5000
for( idx in 1:nTrial){
x = rnorm(nSample)
estimate = ScaleEstimates(x)
results[idx, ] = t(estimate)
}
results
colMeans(results)
boxplot(results)
consist_factor = colMeans(results)  # these are the consistency factors
consist_factor[1]
consist_factor[1][2]
consist_factor[2]
for (idx in 1:4) {
results[,idx] = results[,idx] * consist_factor[idx]
}
boxplot(results)
for (idx in 1:4) {
results[,idx] = results[,idx] / consist_factor[idx]
}
for (idx in 1:4) {
results[,idx] = results[,idx] / consist_factor[idx]
}
boxplot(results)
diag(var(results))
1/(2*diag(var(results)))
diag(var(results))
diag(var(results))
head(results)
var(results)
library(matrixStats)
colVars(results)
diag(var(results))
1/(2*5000*diag(var(results)))
1/(2*2000*diag(var(results)))
1/(2*2000*diag(var(results)))
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = rbind(x,y)
dim(z)
z = cbind(x,y)
dim(z)
hist(z)
s_mean = seq(0,length(s))
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = cbind(x,y)
s = seq(-4,4,by=0.01)
s_sd = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = sd(temp)/consist_factor[1]
}
s_mad = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = mad(temp)/consist_factor[2]
}
s_iqr = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = iqr(temp)/consist_factor[3]
}
s_qn = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = Qn(temp)/consist_factor[4]
}
plot(s, s_sd)
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = cbind(x,y)
s = seq(-4,4,by=0.01)
s_sd = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))/consist_factor[1]
}
s_mad = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))/consist_factor[2]
}
s_iqr = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))/consist_factor[3]
}
s_qn = seq(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))/consist_factor[4]
}
length(s)
length(s_sd)
length(s_iqr)
s_qn = seq(0,length(s))
length(s)
length(s_qn)
s_qn = seq(0,length(s))
length(s_qn)
length(s)
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = cbind(x,y)
s = seq(-4,4,by=0.01)
s_sd = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))/consist_factor[4]
}
plot(s, s_sd)
lines(s, s_iqr, type='l', col='blue')
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
s
temp
sd(temp)-sd(z)
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = cbind(x,y)
s = seq(-4,4,by=0.01)
s_sd = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
(sd(temp)-sd(z))*200
temp[201]
(sd(temp)-sd(z))*200/consist_factor[1]
s_sd[802]
s_sd[801]
s_sd[1]
temp[201] = -4
(sd(temp)-sd(z))*200/consist_factor[1]
z
z = cbind(x,y)
z
z = rbind(x,y)
z
z
z = c(x,y)
z
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = c(x,y)
s = seq(-4,4,by=0.01)
s_sd = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
s_sd = rep(0,length(s))
for (idx in length(s)) {
temp = z
temp[201] = s[idx]
print(s[idx])
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
# q3
set.seed(0916778)
x = rnorm(100)
y = -x
z = c(x,y)
s = seq(-4,4,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
# q3
set.seed(0916778)
x = rpois(100, lambda=5)
y = -x
z = c(x,y)
s = seq(-4,4,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
# q3
set.seed(0916778)
x = rpois(100, lambda=5)
y = -x
z = x
s = seq(-4,4,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
# q3
set.seed(0916778)
x = rpois(100, lambda=5)
y = -x
z = x
s = seq(0.001,5,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
s_sd
sd(z)
temp
# q3
set.seed(0916778)
x = rpois(200, lambda=5)
y = -x
z = x
s = seq(0.001,5,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_sd
# q3
set.seed(0916778)
x = rpois(200, lambda=5)
y = -x
z = x
s = seq(0.001,5,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
# q3
set.seed(0916778)
x = rpois(200, lambda=5)
y = -x
z = x
s = seq(0.001,100,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
# q3
set.seed(0916778)
x = rpois(200, lambda=3)
y = -x
z = x
s = seq(0.001,15,by=0.01)
s_sd = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_sd[idx] = (sd(temp)-sd(z))*200/consist_factor[1]
}
s_mad = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_mad[idx] = (mad(temp)-mad(z))*200/consist_factor[2]
}
s_iqr = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_iqr[idx] = (iqr(temp)-iqr(z))*200/consist_factor[3]
}
s_qn = rep(0,length(s))
for (idx in 1:length(s)) {
temp = z
temp[201] = s[idx]
s_qn[idx] = (Qn(temp)-Qn(z))*200/consist_factor[4]
}
plot(s, s_sd, type='l', col='red')
lines(s, s_iqr, type='l', col='blue')
lines(s, s_mad, type='l', col='green')
lines(s, s_qn, type='l', col='yellow')
getwd()
setwd('C:/Users/Lunky/Desktop/Math KULeuven/Big Data Platforms & Technologies/Assigment 1/AABDW/Assignment 1/Data')
train_data = read.csv('temp_train_data.csv')
head(train_data)
class(train_data)
library(rrcov)
